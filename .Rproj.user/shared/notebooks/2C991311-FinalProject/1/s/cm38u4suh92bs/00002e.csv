"0","library (rpart)"
"0",""
"0","AllErrors = c()"
"0","AllErrorsPruned = c()"
"0",""
"0","for (fold in 1:10) {"
"0",""
"0","num_samples = dim(mushroomData)[1]"
"0","sampling.rate = 0.8"
"0","training = sample(1:num_samples, sampling.rate*num_samples, replace= FALSE)"
"0","trainingSet = subset(mushroomData[training, ])"
"0","testing = setdiff(1:num_samples,training)"
"0","testingSet = subset(mushroomData[testing, ])"
"0",""
"0","decTreeModel = rpart(class~cap.diameter+cap.shape+cap.surface+cap.color+does.bruise.or.bleed+gill.attachment+gill.spacing+gill.color+stem.height+stem.width+stem.root+stem.surface+stem.color+has.ring+ring.type+spore.print.color+habitat+season,data=trainingSet)"
"0",""
"0","pruned_decTreeModel = prune(decTreeModel, cp=0.02)"
"0",""
"0","predictedLabels = predict(decTreeModel, testingSet, type=""class"")"
"0","sizeTestSet = dim(testingSet) [1]"
"0","error = sum(predictedLabels != testingSet$class)"
"0","misclassification_rate = error/sizeTestSet"
"0",""
"0","predictedLabelsPrune = predict(pruned_decTreeModel, testingSet, type=""class"")"
"0","sizeTestSet2 = dim(testingSet) [1]"
"0","errorPrune = sum(predictedLabelsPrune != testingSet$class)"
"0","misclassification_rate_pruned = errorPrune/sizeTestSet2"
"0",""
"0","AllErrors[fold]=misclassification_rate"
"0","AllErrorsPruned[fold]=misclassification_rate_pruned"
"0",""
"0","}"
"0",""
"0","AverageError = mean(AllErrors)"
"0","AverageErrorPruned = mean(AllErrorsPruned)"
