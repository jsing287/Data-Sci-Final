"0","library(class)"
"0","mushroomDataKNN = read.csv(""mushroom.csv"", sep = ';')"
"0",""
"0","mushroomDataKNN$cap.diameter = (mushroomDataKNN$cap.diameter - mean(mushroomDataKNN$cap.diameter))/sd(mushroomDataKNN$cap.diameter)"
"0","mushroomDataKNN$stem.height = (mushroomDataKNN$stem.height - mean(mushroomDataKNN$stem.height))/sd(mushroomDataKNN$stem.height)"
"0","mushroomDataKNN$stem.width = (mushroomDataKNN$stem.width - mean(mushroomDataKNN$stem.width))/sd(mushroomDataKNN$stem.width)"
"0",""
"0","mis = c(20)"
"0",""
"0","for (i in 1:20) {"
"0","  "
"0","  AllErrors = c()"
"0","  "
"0","  for (fold in 1:10) {"
"0","    "
"0","  num_samples = dim(mushroomDataKNN)[1]"
"0","  sampling.rate = 0.8"
"0","  training <- sample(1:num_samples, sampling.rate * num_samples, replace=FALSE)"
"0","  trainingSet <- subset(mushroomDataKNN[training, ])"
"0","  testing <- setdiff(1:num_samples, training)"
"0","  testingSet <- subset(mushroomDataKNN[testing, ])"
"0","    "
"0","  trainingfeatures <- subset(trainingSet, select=c(-class))"
"0","  traininglabels <- trainingSet$class"
"0","  testingfeatures <- subset(testingSet, select=c(-class))"
"0","  "
"0","  predictedLabels = knn(trainingfeatures, testingfeatures,traininglabels,k=i)"
"0","  sizeTestSet = dim(testingSet)[1]"
"0","  error = sum(predictedLabels != testingSet$class)"
"0","  misRate=error/sizeTestSet"
"0","  AllErrors[fold]=misRate"
"0","  "
"0","  }"
"0","  "
"0","  #Calculate average error, store in array for current k value"
"0","  AverageError = mean(AllErrors)"
"0","  mis[i] = AverageError"
"0","  "
"0","}"
"2","Warning: NAs introduced by coercion"
"2","Warning: NAs introduced by coercion"
"2","Error in knn(trainingfeatures, testingfeatures, traininglabels, k = i) : 
  NA/NaN/Inf in foreign function call (arg 6)
"
